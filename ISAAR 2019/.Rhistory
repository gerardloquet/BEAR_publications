ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ 12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores')
dev.off()
fit.ssq <- lm(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
summary(fit.ssq)
ioi.7 <- data.ioi
ioi.3 <- data.ioi[, c(1,2,5)]
ioi.7.mean <- rowMeans(ioi.7) - 1 + rnorm(nrow(ioi.plot),0,0.01)
ioi.7 <- data.ioi
ioi.3 <- data.ioi[, c(1,2,5)]
ioi.7.mean <- rowMeans(ioi.7) - 1 + rnorm(nrow(ioi.7),0,0.01)
ioi.3.mean <- rowMeans(ioi.3) - 1 + rnorm(nrow(ioi.3),0,0.01)
ioi.plot <- data.frame(ioi.3.mean, ioi.7.mean)
png('Scatter_IOI.png',width = 900, height = 700)
ggplot(data = ioi.plot, aes(x = ioi.7.mean, y = ioi.3.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method =  lm,linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'IOI-HA-7', y = 'IOI-HA-3') +
annotate(geom="text", x=1, y=3, label="0.2 + 0.96 * IOI-HA 7",
color='red', size=10) +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
labs(title = 'Mean IOI-HA-7 scores vs. mean IOI-HA-3 scores')
dev.off()
fit.ioi <- lm(data = ioi.plot, ioi.3.mean ~ ioi.7.mean)
summary(fit.ioi)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25))
dev.off()
fit.ssq <- lm(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
summary(fit.ssq)
ioi.7 <- data.ioi
ioi.3 <- data.ioi[, c(1,2,5)]
ioi.7.mean <- rowMeans(ioi.7) - 1 + rnorm(nrow(ioi.7),0,0.01)
ioi.3.mean <- rowMeans(ioi.3) - 1 + rnorm(nrow(ioi.3),0,0.01)
ioi.plot <- data.frame(ioi.3.mean, ioi.7.mean)
png('Scatter_IOI.png',width = 900, height = 700)
ggplot(data = ioi.plot, aes(x = ioi.7.mean, y = ioi.3.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method =  lm,linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'IOI-HA-7', y = 'IOI-HA-3') +
annotate(geom="text", x=1, y=3, label="0.2 + 0.96 * IOI-HA-7",
color='red', size=10) +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
labs(title = 'Mean IOI-HA-7 scores vs. mean IOI-HA-3 scores') +
theme(title = element_text(size=25))
dev.off()
fit.ioi <- lm(data = ioi.plot, ioi.3.mean ~ ioi.7.mean)
summary(fit.ioi)
SSQ.12 <- data.ssq
SSQ.5 <- data.ssq[, c(2,7,9,11,12)]
#make average
SSQ.12.mean <- rowMeans(SSQ.12)
SSQ.5.mean <- rowMeans(SSQ.5)
SSQ.plot <- data.frame(SSQ.12.mean, SSQ.5.mean)
png('Scatter_SSQ.png', width = 900, height = 700)
ggplot(data = SSQ.plot, aes(x = SSQ.12.mean, y = SSQ.5.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method = lm, linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'SSQ-12', y = 'SSQ-5')  +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
annotate(geom="text", x=25, y=75, label="1.4 + 0.98 * SSQ-12",color='red', size=10) +
labs(title = 'Mean SSQ-12 scores vs. mean SSQ-5 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ssq <- lm(data = SSQ.plot, SSQ.5.mean ~ SSQ.12.mean)
summary(fit.ssq)
ioi.7 <- data.ioi
ioi.3 <- data.ioi[, c(1,2,5)]
ioi.7.mean <- rowMeans(ioi.7) - 1 + rnorm(nrow(ioi.7),0,0.01)
ioi.3.mean <- rowMeans(ioi.3) - 1 + rnorm(nrow(ioi.3),0,0.01)
ioi.plot <- data.frame(ioi.3.mean, ioi.7.mean)
png('Scatter_IOI.png',width = 900, height = 700)
ggplot(data = ioi.plot, aes(x = ioi.7.mean, y = ioi.3.mean)) +
geom_point(color = 'blue', size = 2) +
geom_smooth(method =  lm,linetype = 'solid', color = 'red', fill = 'black', size = 1) +
labs(x = 'IOI-HA-7', y = 'IOI-HA-3') +
annotate(geom="text", x=1, y=3, label="0.2 + 0.96 * IOI-HA-7",
color='red', size=10) +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 21)) +
labs(title = 'Mean IOI-HA-7 scores vs. mean IOI-HA-3 scores') +
theme(title = element_text(size=25),
axis.title = element_text(size=24),
axis.text = element_text(size=23))
dev.off()
fit.ioi <- lm(data = ioi.plot, ioi.3.mean ~ ioi.7.mean)
summary(fit.ioi)
View(data.lr)
colnames(data.lr)
data.lr$ha_model2
data.lr$ha_type
data.lr$ha_model4
data.lr$ha_model2
data.lr$ha_manufactor.x
data.lr$ha_model2
data.lr$ha_model7
data.lr$ha_dispencer
data.lr$ha_number_of_ha
data.lr$sex
data.lr$ha_type.new
data.lr$ha_model7
data.lr$ha_use_time
source('setup.R')
tmp <- t3.data.15d %>% merge(t3.data.ssq,by = c('record_id','redcap_event_name')) %>%
merge(t3.data.thi, c('record_id','redcap_event_name')) %>%
merge(df_fitting_rationale, c('record_id','redcap_event_name')) %>% merge(df_ioi, c('record_id','redcap_event_name'))
tmp <- tmp %>% merge(df_tinnitus, c('record_id')) %>%
merge(df_motivation, c('record_id')) %>%
merge(df_ha_use, c('record_id')) %>%
merge(df_audiogram, c('record_id')) %>%
merge(df_CCI, c('record_id'))
library('rpart')
library('partykit')
library('rpart.plot')
library('ggplot2')
library('gridExtra')
eq <- AudClass ~  sex + charl2_score + age
fit.rpart <- rpart(eq, data = tmp, method = 'class', parms = list(split = 'information'), control = rpart.control(cp = 0.003))
png('Question 1a.png',width = 3000, height = 2000)
plot(as.party(fit.rpart))
dev.off()
male <- tmp[tmp$sex == 'Male',]
female <- tmp[tmp$sex == 'Female',]
gender <- c('male','female')
workNoise <- c(length(male$noise_at_work == 'Yes'), length(female$noise_at_work == 'Yes'))
workDuration <- c(mean(male$noise_employment_yrs_2[!(is.na(male$noise_employment_yrs_2))]), mean(female$noise_employment_yrs_2[!(is.na(female$noise_employment_yrs_2))]))
plot.frame <- data.frame(gender, workNoise, workDuration)
plt1 <- ggplot(plot.frame, aes( x = gender, y = workNoise, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise during work (# Yes)') +
scale_y_continuous(limits = c(0, 1000)) + theme_grey(base_size = 20)
plt2 <- ggplot(plot.frame, aes(x = gender, y = workDuration, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise Duration (years)') +
scale_y_continuous(limits = c(0, 20)) + theme_grey(base_size = 20)
png('Noise exposure.png',width = 1000, height = 600)
grid.arrange(plt1, plt2, ncol = 2)
dev.off()
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
png('Scree_IOI.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
dev.off()
nr.factors
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:12,nr.factors$fa.values + 0.05)
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:12,nr.factors$fa.values + 0.05)
fa_val <- data.frame(nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
fa_val <- data.frame(nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
nr.valu
nr.values
nr.factors
length(nr.factors)
fa_val <- data.frame(1:length(nr.factors),nr.factors$fa.values + 0.05)
1:length(nr.factors)
length(nr.factors$fa.values)
fa_val <- data.frame(1:length(nr.factors$fa.values),nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
fa_val <- data.frame(1:length(nr.factors$fa.values),nr.factors$fa.values + 0.05)
#names(fa_val) <- c('Factor_number','Eigenvalue')
png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
grid.arrange(scree1,scree2,nrow=1,ncol=2)
fa_val <- data.frame(1:12,nr.factors$fa.values + 0.05)
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree.png',width = 1000, height = 700)
nr.factors <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:12,nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
fa_val <- data.frame(1:length(nr.factors$fa.values),nr.factors$fa.values + 0.05)
#names(fa_val) <- c('Factor_number','Eigenvalue')
png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
grid.arrange(scree1,scree2,nrow=1,ncol=2)
fa_val <- data.frame(1:length(nr.factors$fa.values),nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
grid.arrange(scree1,scree2,nrow=1,ncol=2)
fa_val <- data.frame(1:length(nr.factors$fa.values),nr.factors$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
grid.arrange(scree1,scree2,nrow=1,ncol=2)
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree.png',width = 1000, height = 700)
nr.factors_SSQ <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors$fa.values + 0.05)
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
grid.arrange(scree1,scree2,nrow=1,ncol=2)
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 3) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 4) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
fa.ssq <- fa(ssq.cor, nfactors = 5
, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 4) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_point(color = 'red', size = 4) +
geom_line() +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
