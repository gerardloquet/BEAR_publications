female <- tmp[tmp$sex == 'Female',]
gender <- c('male','female')
workNoise <- c(length(male$noise_at_work == 'Yes'), length(female$noise_at_work == 'Yes'))
workDuration <- c(mean(male$noise_employment_yrs_2[!(is.na(male$noise_employment_yrs_2))]), mean(female$noise_employment_yrs_2[!(is.na(female$noise_employment_yrs_2))]))
plot.frame <- data.frame(gender, workNoise, workDuration)
plt1 <- ggplot(plot.frame, aes( x = gender, y = workNoise, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise during work (# Yes)') +
scale_y_continuous(limits = c(0, 1000)) + theme_grey(base_size = 20)
plt2 <- ggplot(plot.frame, aes(x = gender, y = workDuration, fill = gender)) +
geom_bar(stat = 'identity', width = .9, show.legend = FALSE) + xlab('') + ylab('Noise Duration (years)') +
scale_y_continuous(limits = c(0, 20)) + theme_grey(base_size = 20)
png('Noise exposure.png',width = 1000, height = 600)
grid.arrange(plt1, plt2, ncol = 2)
dev.off()
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree.png',width = 1000, height = 700)
nr.factors_SSQ <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=22),
axis.text.y = element_text(size=22))
#dev.off()
fa.ssq <- fa(ssq.cor, nfactors = 5
, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
png('Factor_plot.png', width = 1000, height = 1000)
fa.diagram(fa.ssq, simple = FALSE)
dev.off()
setwd("~/BEAR/BEAR_publication_code/ISAAR 2019")
png('Factor_plot.png', width = 1000, height = 1000)
fa.diagram(fa.ssq, simple = FALSE)
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=22),
axis.text.y = element_text(size=22))
#dev.off()
library('gridExtra')
#png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
#png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
#png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
#png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=22),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
tiff('Combined_scree.tiff',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
setwd("~/BEAR/BEAR_publication_code/ISAAR 2019")
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 5) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 5) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=23),
axis.text.x = element_text(size=21),
axis.text.y = element_text(size=21))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=24),
axis.title = element_text(size=30),
title = element_text(size=28),
legend.text = element_text(size=28))
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=25),
axis.title = element_text(size=31),
title = element_text(size=28),
legend.text = element_text(size=29))
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22, angle = 45),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
source('setup.R')
getwd()
setwd("~/BEAR/BEAR_publication_code/ISAAR 2019")
source('setup.R')
source('setup.R')
tmp <- t3.data.15d %>% merge(t3.data.ssq,by = c('record_id','redcap_event_name')) %>%
merge(t3.data.thi, c('record_id','redcap_event_name')) %>%
merge(df_fitting_rationale, c('record_id','redcap_event_name')) %>% merge(df_ioi, c('record_id','redcap_event_name'))
tmp <- tmp %>% merge(df_tinnitus, c('record_id')) %>%
merge(df_motivation, c('record_id')) %>%
merge(df_ha_use, c('record_id')) %>%
merge(df_audiogram, c('record_id')) %>%
merge(df_CCI, c('record_id'))
fa_val <- data.frame(1:12,nr.factors_SSQ$fa.values + 0.05)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new.png',width=800, height = 500)
scree1 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=19),
axis.text.y = element_text(size=19))
#dev.off()
fa.ssq <- fa(ssq.cor, nfactors = 5
, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
library('caret')
library('psych')
data.ssq <- tmp[,seq(22,33,1)]
ssq.cor <- cor(data.ssq, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree.png',width = 1000, height = 700)
nr.factors_SSQ <- fa.parallel(ssq.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa.ssq <- fa(ssq.cor, nfactors = 5
, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ssq
png('Factor_plot.png', width = 1000, height = 1000)
fa.diagram(fa.ssq, simple = FALSE)
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22, angle = 45),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
data.ioi <- tmp[, seq(83,89,1)]
data.ioi <- sapply(data.ioi, FUN = as.numeric)
ioi.cor <- cor(data.ioi, use = 'complete.obs')
#now the factor analysis - make them orthogonal first
#png('Scree_IOI.png',width = 1000, height = 700)
nr.factors_IOI <- fa.parallel(ioi.cor, n.obs = 1700, fa = 'fa')
#dev.off()
nr.factors
fa_val <- data.frame(1:length(nr.factors_IOI$fa.values),nr.factors_IOI$fa.values)
names(fa_val) <- c('Factor_number','Eigenvalue')
#png('Scree_new_IOI.png',width=800, height = 500)
scree2 <- ggplot(fa_val, aes(x=Factor_number, y=Eigenvalue))+
geom_line() +
geom_point(color = 'red', size = 4) +
geom_hline(yintercept = 0, linetype='dashed',color='black') +
scale_x_discrete(name = 'Factor number',limits=c(1:12)) +
theme(text = element_text(size=19),
axis.text.x = element_text(size=22),
axis.text.y = element_text(size=22))
#dev.off()
library('gridExtra')
png('Combined_scree.png',width = 1200, height = 500)
grid.arrange(scree1,scree2,nrow=1,ncol=2)
dev.off()
fa.ioi <- fa(ioi.cor, nfactors =
3, rotate = 'varimax', fm = 'pa',SMC = FALSE, n.obs = 1700)
fa.ioi
#for IOI-HA
library('RColorBrewer')
IOI_plot <- data.frame(matrix(ncol = 3, nrow = 3 * 7))
x <- c("Item", "Loading", "Factors")
colnames(IOI_plot) <- x
x_axis_lab <- c('IOI-HA#1','IOI-HA#2','IOI-HA#3','IOI-HA#4','IOI-HA#5','IOI-HA#6','IOI-HA#7')
colnames(data.ioi) <- x_axis_lab
IOI_plot$Item <- rep(colnames(data.ioi),3)
IOI_plot$Loading <- as.vector(fa.ioi$Structure)
IOI_plot$Factors <- c(rep('Factor 1',7),
rep('Factor 2',7),
rep('Factor 3',7))
tiff(filename = 'PCA_IOI.tif',width = 1300, height = 700)
ggplot(data = IOI_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for IOI-HA-7 items',subtitle = 'Cumulative variance = 70%') +
theme(axis.text=element_text(size=27),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=30))
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22, angle = 45),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
#install.packages('RColorBrewer')
library('RColorBrewer')
SSQ_plot <- data.frame(matrix(ncol = 3, nrow = 5 * 12))
x <- c("Item", "Loading", "Factors")
colnames(SSQ_plot) <- x
x_axis_lab <- c('Speech#1','Speech#4','Speech#10','Speech#11','Speech#12','Space#6','Space#9','Space#13','Sound#2','Sound#7','Sound#9','Sound#14')
colnames(data.ssq) <- x_axis_lab
SSQ_plot$Item <- rep(colnames(data.ssq),5)
SSQ_plot$Loading <- as.vector(fa.ssq$Structure)
SSQ_plot$Factors <- c(rep('Factor 1',12),
rep('Factor 2',12),
rep('Factor 3',12),
rep('Factor 4',12),
rep('Factor 5',12))
tiff(filename = 'PCA_SSQ.tif',width = 1600, height = 700)
ggplot(data = SSQ_plot,aes(x = Item, y = Loading, fill = Factors)) +
geom_bar(stat = 'identity', position = 'stack') +
scale_fill_brewer(palette = 'Dark2') +
labs(title='Factor loadings for SSQ-12 items',subtitle = 'Cumulative variance = 79%') +
theme(axis.text=element_text(size=22, angle = 45, hjust = 1),
axis.title = element_text(size=30),
title = element_text(size=27),
legend.text = element_text(size=27))
dev.off()
